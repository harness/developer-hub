import React, { Children, isValidElement } from "react";
import "./DocTable.css";

/**
 * <DocTable> wraps a Markdown table (passed as children) and renders it
 * as a full-width, rounded card with fixed column widths (25/75 by default).
 * Works with plain Markdown tables authored inside the component block.
 *
 * Usage (MDX, no import needed thanks to MDXComponents mapping):
 * <DocTable>
 * | Priority | Source |
 * |---------|--------|
 * | 1 ...   | ...    |
 * </DocTable>
 */

export interface DocTableProps {
  /** Column widths (any valid CSS <length-percentage>). */
  priorityColWidth?: string; // default "25%"
  sourceColWidth?: string;   // default "75%"
  /** Apply subtle striping to body rows. */
  striped?: boolean; // default true
  className?: string;
  style?: React.CSSProperties;
  children?: React.ReactNode; // expected: a single <table> generated by MDX
}

export default function DocTable({
  priorityColWidth = "25%",
  sourceColWidth = "75%",
  striped = true,
  className,
  style,
  children,
}: DocTableProps) {
  // Find the first <table> generated by MDX inside children.
  let tableEl: React.ReactElement | null = null;

  Children.forEach(children, (child) => {
    if (!tableEl && isValidElement(child) && child.type === "table") {
      tableEl = child;
    }
  });

  if (!tableEl) {
    // Graceful fallback: render children as-is if no table found.
    return <>{children}</>;
  }

  // Extract thead/tbody so we can inject <colgroup> and wrapper.
  let theadNode: React.ReactNode | undefined;
  let tbodyNode: React.ReactNode | undefined;

  Children.forEach((tableEl as any).props.children, (child) => {
    if (isValidElement(child)) {
      if (child.type === "thead") theadNode = child;
      if (child.type === "tbody") tbodyNode = child;
    }
  });

  return (
    <div className={`docTableCard ${className || ""}`} style={style}>
      <table className={`docTable ${striped ? "docTable--striped" : ""}`}>
        <colgroup>
          <col style={{ width: priorityColWidth }} />
          <col style={{ width: sourceColWidth }} />
        </colgroup>
        {theadNode}
        {tbodyNode}
      </table>
    </div>
  );
}