{
    "iacm": {
      "provider-registry": {
        "custom-provider": "An OpenTofu or Terraform provider built and maintained by your organization, usually for internal APIs or services not available in the public registry.",
        "gpg-key": "A cryptographic key used to verify the authenticity and integrity of files. In this case, it ensures provider binaries have not been tampered with.",
        "binary-files": "Executable program files produced after compiling source code (for example, Go or Java). OpenTofu or Terraform uses these binaries to interact with your infrastructure.",
        "multiple-platforms": "Supported platforms include Darwin/macOS (arm64, amd64), Linux (amd64), and Windows (amd64).",
        "checksum-file": "A file listing SHA-256 hashes for each binary you plan to publish. The registry uses this to verify file integrity.",
        "signature-file": "A detached signature produced by signing the checksum file with your GPG private key. The public key is used to verify authenticity."
      },
      "tf-commands": {
        "init": "OpenTofu/Terraform command used to initialize a configuration. It downloads and configures providers, modules, and other dependencies."
      }
    },
    "fme": {
      "warehouse-native": {
        "assignment-source": "A data source that defines how users are assigned to different variations in an experiment. In Warehouse Native, this data is typically stored in your data warehouse.",
        "metric-source": "A data source that defines how metrics are collected and calculated for an experiment. In Warehouse Native, this data is typically stored in your data warehouse.",
        "data-warehouse": "A centralized repository for storing and managing large volumes of structured and semi-structured data. Examples include Snowflake, BigQuery, Redshift, and Databricks.",
        "warehouse-native": "A method of running feature management experiments directly within your data warehouse, leveraging its processing power and existing data infrastructure.",
        "cloud-experimentation": "A method of running feature management experiments using a cloud-based service provided by Harness FME, which handles data collection, analysis, and reporting."
      }
    }
  }